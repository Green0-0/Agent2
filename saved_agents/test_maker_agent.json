{
  "system_prompt": "",
  "init_message": "Here are a list of elements within some files:\n{{elements_saved_text}}\nHere is a github issue:\n{{task}}\nYour job is not to fix the issue, but to create a new pytest test file (no commandline arguments please) to test if an already implemented solution works. Determine what your test cases should test, then output a single new code block with tests that checks all edge cases and scenarios for a theoretical patch. This test case will be placed into a file in the top directory and ran. Make sure your imports are correct, as shown in the reference scripts.\nMake sure the code block you output is the entirety of the test you want to write, do not exclude anything or leave the user to fill anything in themselves.",
  "tool_formatter": {
    "type": "JSON",
    "tool_start": "<tool>",
    "tool_end": "</tool>"
  },
  "tool_settings": {
    "max_search_result_listings": 1,
    "max_search_result_lines": 1,
    "max_view_lines_start": 1,
    "max_view_lines_end": 1,
    "number_lines": false,
    "unindent_inputs": false,
    "reindent_outputs": false,
    "match_strict_level": 1,
    "secretly_save": false,
    "embeddings_model_path": null,
    "embeddings_model": null,
    "minimum_embeddings_similarity": 0.5
  },
  "selected_tools": [],
  "prompt_templates": {
    "response_wrapper": "{{tool_response}}",
    "not_found_error": "Tool '{{tool_name}}' not found. Closest match (if present): {{closest_match}}\nAvailable tools: {{tools_list_name}}",
    "wrong_args_error": "Invalid arguments for '{{tool_name}}'\nWrong arguments: {{wrong_arguments}}\nMissing parameters: {{missing_args}}\nUnrecognized parameters: {{unrecognized_args}}",
    "misc_error": "Miscellaneous error in '{{tool_name}}': \n{{error_message}}"
  }
}