{
  "system_prompt": "",
  "init_message": "Here is a github issue:\n{{task}}\nHere are a list of elements within some files of the repo of the issue:\n{{elements_saved_text}}\nYour job is not to fix the issue, but to create a python file that replicates it and fails to run. This way, I can run the python file and get the error traceback (so I can locate the issue), and check if my solution works. Use print statements to help with debugging wherever possible. At the end of your python file, add print(\"SUCCESS\"); if the issue is fixed then your python file should run without errors and print \"SUCCESS\". Do not use try/except blocks, your code must fail naturally. Note: Try to avoid printing over 300 lines, this will cause your output to get truncated.",
  "tool_formatter": {
    "type": "JSON",
    "tool_start": "{{tools_start}}",
    "tool_end": "{{tools_end}}"
  },
  "tool_settings": {
    "max_search_result_listings": 1,
    "max_search_result_lines": 1,
    "max_view_lines_start": 1,
    "max_view_lines_end": 1,
    "number_lines": false,
    "unindent_inputs": false,
    "reindent_outputs": false,
    "match_strict_level": 1,
    "secretly_save": false,
    "embeddings_model_path": null,
    "embeddings_model": null,
    "minimum_embeddings_similarity": 0.5
  },
  "selected_tools": [],
  "prompt_templates": {
    "response_wrapper": "{{tool_response}}",
    "not_found_error": "Tool '{{tool_name}}' not found. Closest match (if present): {{closest_match}}\nAvailable tools: {{tools_list_name}}",
    "wrong_args_error": "Invalid arguments for '{{tool_name}}'\nWrong arguments: {{wrong_arguments}}\nMissing parameters: {{missing_args}}\nUnrecognized parameters: {{unrecognized_args}}",
    "misc_error": "Miscellaneous error in '{{tool_name}}': \n{{error_message}}"
  }
}