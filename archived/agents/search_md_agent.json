{
  "system_prompt": "You are Qwen, created by Alibaba Cloud. You are a helpful assistant.\n\n# Tools\n\nYou may call one or more functions to assist with the user query.\n\nYou are provided with function signatures within <tools></tools> XML tags:\n<tools>\n{{tools_list}}\n</tools>\n\nFor each function call, return a code block running the functions that you want to run within {{tools_start}} {{tools_end}} markdown:\n{{tools_start}}\n## Name: tool_name\n### Property_1_name: property_1_value\n### Property_2_name: property_2_value\n... remaining properties...\n{{tools_end}}. You may only use one tool per turn.",
  "init_message": "I have given you access to a github repo, with the following list of folders at the root level (along with a summary of the file types present):\n{{top_level_files_list}}\n{{filetype_summary}}\n\nUse your tools to explore the repo, and understand this issue that occurs within it:\n{{task}}\n\nYour goal is to view all the relevant files and elements, but focus on viewing specific functions, and not classes. When you view an element, output an analysis considering if that code is the source of the issue or if the issue could occur elsewhere. Also analyze what related classes/tests/functions/etc should be viewed to supply context to assist me in fixing the issue. Note that you do not need to write any code; all the elements you view are sent to a coding agent. Let me know when you are done viewing elements.",
  "tool_formatter": {
    "type": "Markdown",
    "tool_start": "# Tool Use",
    "tool_end": "# Tool End"
  },
  "tool_settings": {
    "max_search_result_listings": 15,
    "max_search_result_lines": 50,
    "max_view_lines_start": 200,
    "max_view_lines_end": 200,
    "number_lines": true,
    "unindent_inputs": true,
    "reindent_outputs": true,
    "match_strict_level": 1,
    "secretly_save": true,
    "embeddings_model_path": null,
    "embeddings_model": null,
    "minimum_embeddings_similarity": 0.5
  },
  "selected_tools": [
    "view_element",
    "search_elements"
  ],
  "prompt_templates": {
    "response_wrapper": "{{tool_response}}",
    "not_found_error": "Tool '{{tool_name}}' not found. Closest match (if present): {{closest_match}}\nAvailable tools: {{tools_list_name}}",
    "wrong_args_error": "Invalid arguments for '{{tool_name}}'\nWrong arguments: {{wrong_arguments}}\nMissing parameters: {{missing_args}}\nUnrecognized parameters: {{unrecognized_args}}",
    "misc_error": "Miscellaneous error in '{{tool_name}}': \n{{error_message}}"
  }
}